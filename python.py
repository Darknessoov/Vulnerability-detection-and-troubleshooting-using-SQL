import re
import os
# Импорт библиотек
def find_exact_match(filename, pattern): # Определяем функцию для поиска точных совпадений
  matches = [] # Создаем список для хранения найденных совпадений
  with open(filename, "r") as file: # Открываем файл для чтения
    for i, line in enumerate(file, start=1):
     # Перебираем строки в файле, начиная с номера 1
      # Use re.findall to find all occurrences of the pattern in the line
      # Используем re.findall для поиска всех вхождений шаблона в строке
      for match in re.findall(r"\b" + re.escape(pattern) + r"\b", line): # Находим все совпадения с шаблоном, окруженные границами слова
        matches.append((i, match))  # Добавляем номер строки и найденное совпадение в список
    return matches  # Возвращаем список найденных совпадений

# Шаблоны для разных типов символов
pattern_letters = "a-zA-Z"  # Шаблон для букв (строчные и прописные)
pattern_numbers = "^0-9-"  # Шаблон для цифр и дефиса
pattern_alphanumeric = "a-zA-Z0-9"  # Новый шаблон для буквенно-цифровых символов
pattern_max = "maxlength"  # Шаблон для поиска слова "maxlength"

while True:  # Запускаем цикл, который будет выполняться до тех пор, пока пользователь не выберет выход
  choice = input("What do you want to do? (check/clear_log/exit): ").lower()  # Запрашиваем у пользователя ввод, преобразуем его в нижний регистр
  if choice == "check":  # Если пользователь ввел "check"
    filename = input("Enter the path of filename to check (for example, search.php): ")  # Запрашиваем у пользователя имя файла
    filename = f"{filename}"  # Форматируем имя файла
    matches_letters = find_exact_match(filename, pattern_letters)  # Ищем совпадения для букв
    matches_numbers = find_exact_match(filename, pattern_numbers)  # Ищем совпадения для цифр
    matches_alphanumeric = find_exact_match(filename, pattern_alphanumeric)  # Ищем совпадения для буквенно-цифровых символов
    matches_max = find_exact_match(filename, pattern_max)  # Ищем совпадения для слова "maxlength"
    if matches_letters or matches_numbers or matches_alphanumeric:  # Если найдены какие-либо совпадения
      for line_number, match in matches_letters:  # Перебираем найденные совпадения для букв
        with open("log.txt", "a") as f:  # Открываем файл "log.txt" для добавления информации
                    f.write(f"An exact match found in {filename} on line {line_number}: {repr(match)}n")  # Записываем в файл информацию о совпадении
        print(f"An exact match found in {filename} on line {line_number}: {repr(match)}")  # Выводим информацию о совпадении на экран
      for line_number, match in matches_numbers:  # Перебираем найденные совпадения для цифр
        with open("log.txt", "a") as f:  # Открываем файл "log.txt" для добавления информации
          f.write(f"An exact match found in {filename} on line {line_number}: {repr(match)}n")  # Записываем в файл информацию о совпадении
        print(f"An exact match found in {filename} on line {line_number}: {repr(match)}")  # Выводим информацию о совпадении на экран
      for line_number, match in matches_alphanumeric:  # Перебираем найденные совпадения для буквенно-цифровых символов
        with open("log.txt", "a") as f:  # Открываем файл "log.txt" для добавления информации
          f.write(f"An exact match found in {filename} on line {line_number}: {repr(match)}n")  # Записываем в файл информацию о совпадении
        print(f"An exact match found in {filename} on line {line_number}: {repr(match)}")  # Выводим информацию о совпадении на экран
      for line_number, match in matches_max:  # Перебираем найденные совпадения для слова "maxlength"
        with open("log.txt", "a") as f:  # Открываем файл "log.txt" для добавления информации
          f.write(f"An exact match found in {filename} on line {line_number}: {repr(match)}n")  # Записываем в файл информацию о совпадении
        print(f"An exact match found in {filename} on line {line_number}: {repr(match)}")  # Выводим информацию о совпадении на экран
    else:  # Если совпадений не найдено
      with open("log.txt", "a") as f:  # Открываем файл "log.txt" для добавления информации
        f.write(f"No exact matches found for patterns '{pattern_letters}', '{pattern_numbers}', and '{pattern_alphanumeric}' in file '{filename}'n")  # Записываем в файл сообщение о том, что совпадений не найдено
      print(f"No exact matches found for patterns '{pattern_letters}', '{pattern_numbers}', and '{pattern_alphanumeric}' in file '{filename}'.")  # Выводим сообщение о том, что совпадений не найдено на экран

  elif choice == "clear_log":  # Если пользователь ввел "clear_log"
    if os.path.exists("log.txt"):  # Проверяем, существует ли файл "log.txt"
      with open("log.txt", "w") as f:  # Открываем файл "log.txt" для записи
        f.truncate(0)  # Очищаем содержимое файла
      print("Log file cleared.")  # Выводим сообщение о том, что файл был очищен
    else:  # Если файл "log.txt" не существует
      print("Log file does not exist.")  # Выводим сообщение о том, что файл не существует

  elif choice == "exit":  # Если пользователь ввел "exit"
    break  # Прерываем цикл

  else:  # Если пользователь ввел неправильный вариант
    print("Invalid choice. Please choose from 'check', 'clear_log', or 'exit'.")  # Выводим сообщение о том, что ввод некорректен